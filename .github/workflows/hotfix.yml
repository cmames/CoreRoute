name: Hotfix Workflow - Création de Pull Request Conditionnelle

on:
  push:
    branches:
      - 'hotfix'

jobs:
  hotfix_pr:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2 # Récupérer l'historique pour comparer avec le commit précédent

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18.19

      - name: Installer les dépendances
        run: npm install

      - name: Run ESLint Check
        id: eslint-check
        run: npx eslint src/**/*.ts
        continue-on-error: true

      - name: Déterminer la Version Actuelle et la Version Précédente
        id: determine_version_change
        run: |
          CURRENT_VERSION=$(jq -r '.version' package.json)
          PREVIOUS_VERSION=$(git show HEAD^:package.json | jq -r '.version' 2>/dev/null || echo "$CURRENT_VERSION") # Récupère la version précédente, si erreur (1er commit), on prend la version actuelle

          echo "Version Actuelle: ${CURRENT_VERSION}"
          echo "Version Précédente: ${PREVIOUS_VERSION}"

          if [ "$CURRENT_VERSION" != "$PREVIOUS_VERSION" ]; then
            echo "✔️ Version a changé. Préparation de la Pull Request."
            VERSION_CHANGED=true
          else
            echo "❌ Version n'a pas changé. Workflow stoppé."
            VERSION_CHANGED=false
          fi

          echo "VERSION_CHANGED=${VERSION_CHANGED}" >> $GITHUB_OUTPUT
          echo "CURRENT_VERSION=${CURRENT_VERSION}" >> $GITHUB_OUTPUT

      - name: Créer une Pull Request vers Main (si version a changé)
        if: steps.determine_version_change.outputs.VERSION_CHANGED == 'true'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const currentVersion = "${{ steps.determine_version_change.outputs.CURRENT_VERSION }}";
            const branchName = context.payload.ref.replace('refs/heads/', '');
            const prTitle = `Hotfix: v${currentVersion}`;
            const prBody = `Hotfix pour la version v${currentVersion}.\n\nCorrections incluses dans cette Pull Request. Veuillez vérifier et merger dans main pour déclencher la publication NPM.`;

            try {
              await github.rest.pulls.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: prTitle,
                head: branchName,
                base: 'main',
                body: prBody,
              });
              console.log('Pull Request créée avec succès.');
            } catch (error) {
              console.error('Erreur lors de la création de la Pull Request:', error);
            }